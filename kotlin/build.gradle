buildscript {
    ext.kotlin_version = '1.3.30'
    ext.ktor_version = '1.2.1'
    ext.grpc_version = '1.21.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version'1.3.30'
    id 'com.google.protobuf' version '0.8.8'
    id 'idea'
    id 'application'
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}


repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    def kotlinVerion = plugins.findPlugin("org.jetbrains.kotlin.jvm").kotlinPluginVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVerion}"
    implementation "io.grpc:grpc-netty-shaded:${grpc_version}"
    implementation "io.grpc:grpc-protobuf:${grpc_version}"
    implementation "io.grpc:grpc-stub:${grpc_version}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile 'ai.h2o:h2o-genmodel:3.24.0.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.7.1' }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

task irisServer(type: CreateStartScripts) {
    mainClassName = 'tech.thomaslegrand.h2o.IrisServer'
    applicationName = 'iris-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task irisClient(type: CreateStartScripts) {
    mainClassName = 'tech.thomaslegrand.h2o.IrisClient'
    applicationName = 'iris-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(irisServer)
    from(irisClient)
    fileMode = 0755
}